<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>CCF2017-9月</title>
      <link href="/CCF2017-9%E6%9C%88/"/>
      <url>/CCF2017-9%E6%9C%88/</url>
      
        <content type="html"><![CDATA[<h1 id="CCF2017-9月"><a href="#CCF2017-9月" class="headerlink" title="CCF2017-9月"></a>CCF2017-9月</h1><h3 id="1-打酱油"><a href="#1-打酱油" class="headerlink" title="1.打酱油"></a>1.打酱油</h3><p>问题描述</p><p>　　小明带着<em>N</em>元钱去买酱油。酱油10块钱一瓶，商家进行促销，每买3瓶送1瓶，或者每买5瓶送2瓶。请问小明最多可以得到多少瓶酱油。</p><p>输入格式</p><p>　　输入的第一行包含一个整数<em>N</em>，表示小明可用于买酱油的钱数。<em>N</em>是10的整数倍，<em>N</em>不超过300。</p><p>输出格式</p><p>　　输出一个整数，表示小明最多可以得到多少瓶酱油。</p><p>样例输入</p><p>40</p><p>样例输出</p><p>5</p><p>样例说明</p><p>　　把40元分成30元和10元，分别买3瓶和1瓶，其中3瓶送1瓶，共得到5瓶。</p><p>样例输入</p><p>80</p><p>样例输出</p><p>11</p><p>样例说明</p><p>　　把80元分成30元和50元，分别买3瓶和5瓶，其中3瓶送1瓶，5瓶送2瓶，共得到11瓶。</p><p>参考代码:</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> num = <span class="number">0</span>,mon;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;mon;</span><br><span class="line"><span class="keyword">if</span>(mon &lt; <span class="number">30</span>)</span><br><span class="line">num = mon / <span class="number">10</span>;  <span class="comment">//25 </span></span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(mon &lt; <span class="number">50</span>)</span><br><span class="line">num = <span class="number">4</span> + (mon - <span class="number">30</span>) / <span class="number">10</span>; <span class="comment">// 45 </span></span><br><span class="line"><span class="keyword">else</span> &#123;   <span class="comment">// 290 </span></span><br><span class="line"><span class="keyword">int</span> temp,res;</span><br><span class="line">temp = mon / <span class="number">50</span>;  <span class="comment">// 5</span></span><br><span class="line">res = mon % <span class="number">50</span>;  <span class="comment">// 40</span></span><br><span class="line">num = temp*<span class="number">7</span>;   <span class="comment">// 35 </span></span><br><span class="line">temp = res / <span class="number">30</span>; <span class="comment">// 1 </span></span><br><span class="line">res = res % <span class="number">30</span>; <span class="comment">// 10 </span></span><br><span class="line">num += <span class="number">4</span>*temp; <span class="comment">// 39 </span></span><br><span class="line">num += res/<span class="number">10</span>; <span class="comment">// 40 </span></span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;num; </span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-公共钥匙盒"><a href="#2-公共钥匙盒" class="headerlink" title="2. 公共钥匙盒"></a>2. 公共钥匙盒</h3><p>问题描述</p><p>　　有一个学校的老师共用<em>N</em>个教室，按照规定，所有的钥匙都必须放在公共钥匙盒里，老师不能带钥匙回家。每次老师上课前，都从公共钥匙盒里找到自己上课的教室的钥匙去开门，上完课后，再将钥匙放回到钥匙盒中。<br>　　钥匙盒一共有<em>N</em>个挂钩，从左到右排成一排，用来挂<em>N</em>个教室的钥匙。一串钥匙没有固定的悬挂位置，但钥匙上有标识，所以老师们不会弄混钥匙。<br>　　每次取钥匙的时候，老师们都会找到自己所需要的钥匙将其取走，而不会移动其他钥匙。每次还钥匙的时候，还钥匙的老师会找到最左边的空的挂钩，将钥匙挂在这个挂钩上。如果有多位老师还钥匙，则他们按钥匙编号从小到大的顺序还。如果同一时刻既有老师还钥匙又有老师取钥匙，则老师们会先将钥匙全还回去再取出。<br>　　今天开始的时候钥匙是按编号从小到大的顺序放在钥匙盒里的。有<em>K</em>位老师要上课，给出每位老师所需要的钥匙、开始上课的时间和上课的时长，假设下课时间就是还钥匙时间，请问最终钥匙盒里面钥匙的顺序是怎样的？</p><p>输入格式</p><p>　　输入的第一行包含两个整数<em>N</em>, <em>K</em>。<br>　　接下来<em>K</em>行，每行三个整数<em>w</em>, <em>s</em>, <em>c</em>，分别表示一位老师要使用的钥匙编号、开始上课的时间和上课的时长。可能有多位老师使用同一把钥匙，但是老师使用钥匙的时间不会重叠。<br>　　保证输入数据满足输入格式，你不用检查数据合法性。</p><p>输出格式</p><p>　　输出一行，包含<em>N</em>个整数，相邻整数间用一个空格分隔，依次表示每个挂钩上挂的钥匙编号。</p><p>样例输入</p><p>5 2<br>4 3 3<br>2 2 7</p><p>样例输出</p><p>1 4 3 2 5</p><p>样例说明</p><p>　　第一位老师从时刻3开始使用4号教室的钥匙，使用3单位时间，所以在时刻6还钥匙。第二位老师从时刻2开始使用钥匙，使用7单位时间，所以在时刻9还钥匙。<br>　　每个关键时刻后的钥匙状态如下（X表示空）：<br>　　时刻2后为1X345；<br>　　时刻3后为1X3X5；<br>　　时刻6后为143X5；<br>　　时刻9后为14325。</p><p>样例输入</p><p>5 7<br>1 1 14<br>3 3 12<br>1 15 12<br>2 7 20<br>3 18 12<br>4 21 19<br>5 30 9</p><p>样例输出</p><p>1 2 3 5 4</p><p>评测用例规模与约定</p><p>　　对于30%的评测用例，1 ≤ <em>N</em>, <em>K</em> ≤ 10, 1 ≤ <em>w</em> ≤ <em>N</em>, 1 ≤ <em>s</em>, <em>c</em> ≤ 30；<br>　　对于60%的评测用例，1 ≤ <em>N</em>, <em>K</em> ≤ 50，1 ≤ <em>w</em> ≤ <em>N</em>，1 ≤ <em>s</em> ≤ 300，1 ≤ <em>c</em> ≤ 50；<br>　　对于所有评测用例，1 ≤ <em>N</em>, <em>K</em> ≤ 1000，1 ≤ <em>w</em> ≤ <em>N</em>，1 ≤ <em>s</em> ≤ 10000，1 ≤ <em>c</em> ≤ 100。</p><p>思路分析:</p><p>​    这道题关键的问题是有效解决取钥匙和还钥匙的问题,二者不可以分开进行,必须合并成一个过程,这样才能保证正常的逻辑。</p><p>参考代码</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">teacher</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> id;</span><br><span class="line">    <span class="keyword">int</span> time;</span><br><span class="line">    <span class="keyword">int</span> sign;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">//进行排序</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(teacher a,teacher b)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(a.time!=b.time)</span><br><span class="line">        <span class="keyword">return</span> a.time&lt;b.time;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(a.sign!=b.sign)</span><br><span class="line">            <span class="keyword">return</span> a.sign&lt;b.sign;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">return</span> a.id&lt;b.id;</span><br><span class="line"> </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,k;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">teacher</span> <span class="title">a</span>[2005];</span></span><br><span class="line">    <span class="keyword">int</span> b[<span class="number">1005</span>];</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n&gt;&gt;k;</span><br><span class="line">    <span class="keyword">int</span> w,s,c;</span><br><span class="line">    <span class="comment">//既要将取钥匙时间输入数组中，也要将还钥匙的时间输入数组中，所以会有i*2，i*2+1</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;k;i++)&#123;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;w&gt;&gt;s&gt;&gt;c;</span><br><span class="line">        a[i*<span class="number">2</span>].id=w;     <span class="comment">//取</span></span><br><span class="line">        a[i*<span class="number">2</span>].time=s;</span><br><span class="line">        a[i*<span class="number">2</span>].sign=<span class="number">1</span>;</span><br><span class="line">        a[i*<span class="number">2</span>+<span class="number">1</span>].id=w;     <span class="comment">//还</span></span><br><span class="line">        a[i*<span class="number">2</span>+<span class="number">1</span>].time=s+c;</span><br><span class="line">        a[i*<span class="number">2</span>+<span class="number">1</span>].sign=<span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    sort(a,a+<span class="number">2</span>*k,cmp);</span><br><span class="line">    <span class="comment">//先将按从小到大排好的n个数放入数组b中</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;j++)&#123;</span><br><span class="line">        b[j]=j;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">2</span>*k;i++)&#123;</span><br><span class="line">        <span class="comment">//模拟取钥匙</span></span><br><span class="line">        <span class="keyword">if</span>(a[i].sign==<span class="number">1</span>)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;j++)&#123;</span><br><span class="line">                <span class="keyword">if</span>(b[j]==a[i].id)</span><br><span class="line">                    b[j]=<span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//模拟还钥匙</span></span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;j++)&#123;</span><br><span class="line">                <span class="keyword">if</span>(b[j]==<span class="number">0</span>)&#123;</span><br><span class="line">                    b[j]=a[i].id;</span><br><span class="line">                    <span class="keyword">break</span>;&#125;     <span class="comment">//已经把钥匙还回去放到空位，要及时的break，否则所有的空位都会放上这个钥匙</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(i!=<span class="number">1</span>)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">" "</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d"</span>,b[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 </tag>
            
            <tag> CCF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue路由基础</title>
      <link href="/vue%E8%B7%AF%E7%94%B1/"/>
      <url>/vue%E8%B7%AF%E7%94%B1/</url>
      
        <content type="html"><![CDATA[<h1 id="vue路由配置"><a href="#vue路由配置" class="headerlink" title="vue路由配置"></a>vue路由配置</h1><ol><li><p>安装</p><figure class="highlight plain"><figcaption><span>install vue-router --save```</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">或者</span><br><span class="line"></span><br><span class="line">```cnpm install vue-router --save</span><br></pre></td></tr></table></figure></li></ol><ol start="2"><li><p>引入并使用(main.js)</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> VueRouter <span class="keyword">from</span> <span class="string">"vue-router"</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Vue.use(VueRouter)</span><br></pre></td></tr></table></figure></li></ol>   <a id="more"></a><ol start="3"><li><p>配置路由</p><ul><li><p>创建组件,引入组件</p></li><li><p>定义路由   (建议复制)</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> routes = &#123;</span><br><span class="line">  <span class="string">'/'</span>: Home,</span><br><span class="line">  <span class="string">'/about'</span>: About</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>实例化VueRouter</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> router = <span class="keyword">new</span> VueRouter&#123;(</span><br><span class="line">routes   <span class="comment">//详单与routes: routes</span></span><br><span class="line">)&#125;</span><br></pre></td></tr></table></figure></li><li><p>挂载</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> Vue(&#123;</span><br><span class="line">  el: <span class="string">'#app'</span>,</span><br><span class="line">  router,</span><br><span class="line">  render: <span class="function"><span class="params">h</span> =&gt;</span> h(App)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li></ul></li></ol><h1 id="路由的简单用法"><a href="#路由的简单用法" class="headerlink" title="路由的简单用法"></a>路由的简单用法</h1><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">'vue'</span></span><br><span class="line"><span class="keyword">import</span> App <span class="keyword">from</span> <span class="string">'./App.vue'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> VueRouter <span class="keyword">from</span> <span class="string">'vue-router'</span></span><br><span class="line"></span><br><span class="line">Vue.use(VueRouter);</span><br><span class="line"></span><br><span class="line"><span class="comment">//1.创建组件</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> Home <span class="keyword">from</span> <span class="string">"./components/Home.vue"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> News <span class="keyword">from</span> <span class="string">"./components/News.vue"</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//2. 配置路由</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> routes = [</span><br><span class="line">  &#123; <span class="attr">path</span>: <span class="string">'/home'</span>, <span class="attr">component</span>: Home &#125;,</span><br><span class="line">  &#123; <span class="attr">path</span>: <span class="string">'/news'</span>, <span class="attr">component</span>: News &#125;,</span><br><span class="line">  <span class="comment">// &#123; path: '*', redirect: '/home' &#125;</span></span><br><span class="line">]</span><br><span class="line"></span><br><span class="line"><span class="comment">//3.实例化VueRouter</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> router = <span class="keyword">new</span> VueRouter(&#123;</span><br><span class="line">  routes</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">//4. 挂载路由</span></span><br><span class="line"><span class="keyword">new</span> Vue(&#123;</span><br><span class="line">  el: <span class="string">'#app'</span>,</span><br><span class="line">  router,</span><br><span class="line">  render: <span class="function"><span class="params">h</span> =&gt;</span> h(App)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">//5. &lt; router-view &gt; &lt;/router-view&gt;放在根组件app</span><br><span class="line"></span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div id=&quot;app&quot;&gt;</span><br><span class="line">    &lt;router-link to=&quot;/home&quot;&gt;首页&lt;/router-link&gt;</span><br><span class="line">    &lt;router-link to=&quot;/news&quot;&gt;新闻&lt;/router-link&gt;</span><br><span class="line">    &lt;hr&gt;</span><br><span class="line">    &lt;router-view&gt;</span><br><span class="line">    &lt;/router-view&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue </tag>
            
            <tag> 前端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue中的组件传值</title>
      <link href="/vue%E4%B8%AD%E7%9A%84%E7%BB%84%E4%BB%B6%E4%BC%A0%E5%80%BC/"/>
      <url>/vue%E4%B8%AD%E7%9A%84%E7%BB%84%E4%BB%B6%E4%BC%A0%E5%80%BC/</url>
      
        <content type="html"><![CDATA[<h1 id="Vue中的组件传值"><a href="#Vue中的组件传值" class="headerlink" title="Vue中的组件传值"></a>Vue中的组件传值</h1><h2 id="父子组件传值"><a href="#父子组件传值" class="headerlink" title="父子组件传值"></a>父子组件传值</h2><p>首先需要在父组件中引入子组件并注册(挂载)</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 引入组件   挂载组件</span></span><br><span class="line"><span class="keyword">import</span> HelloWorld <span class="keyword">from</span> <span class="string">"./components/HelloWorld.vue"</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//挂载组件</span></span><br><span class="line">  components: &#123;</span><br><span class="line">    <span class="string">"v-home"</span>: HelloWorld</span><br><span class="line">  &#125;</span><br><span class="line"><span class="comment">//使用子组件</span></span><br><span class="line">&lt;v-home&gt;<span class="xml"><span class="tag">&lt;/<span class="name">v-home</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//如果想要在调用子组件的同时给子组件传值</span></span><br><span class="line"><span class="comment">//1. 在使用子组件的时候绑定属性 </span></span><br><span class="line"><span class="comment">//&lt;v-home :title = "title"&gt;&lt;/v-home&gt;</span></span><br><span class="line"><span class="comment">//2. 在子组件中定义属性接收父组件的传值</span></span><br><span class="line"><span class="comment">//props: ["title"]</span></span><br><span class="line"><span class="comment">//ps:如果子组件和父组件含有同名的变量,以父组件为主,但尽量不要这样用</span></span><br></pre></td></tr></table></figure><a id="more"></a><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//如果想在子组件调用父组件的方法</span></span><br><span class="line"><span class="comment">//比如父组件中有一个run方法</span></span><br><span class="line"><span class="comment">//    run(data) &#123;</span></span><br><span class="line"><span class="comment">//      alert("我是父组件的run方法" + data);</span></span><br><span class="line"><span class="comment">//    &#125;</span></span><br><span class="line"><span class="comment">//1. 同样的方法 &lt;v-header :title="title" :run="run"&gt;&lt;/v-header&gt;</span></span><br><span class="line"><span class="comment">//2. 子组件接收  props: ["title", "run"]</span></span><br><span class="line"><span class="comment">//3. 用Button组件进行测试  &lt;button @click="run(666)"&gt;调用父组件的方法&lt;/button&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//:home="this" 可以把整个父组件传过去</span></span><br></pre></td></tr></table></figure><h2 id="非父子组件传值"><a href="#非父子组件传值" class="headerlink" title="非父子组件传值"></a>非父子组件传值</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 1.新建一个js文件 然后引入vue 实例化vue 最后暴露这个实例</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">'vue'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> vueEvent = <span class="keyword">new</span> Vue();</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> vueEvent;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 2.在要广播的地方引入刚才定义的实例   </span></span><br><span class="line">    <span class="keyword">import</span> Bus <span class="keyword">from</span> <span class="string">'../bus.js'</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 3.通过vueEvent.$emit('名称',数据)</span></span><br><span class="line">    <span class="keyword">import</span> Bus <span class="keyword">from</span> <span class="string">'../bus.js'</span>;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">      name: <span class="string">'first'</span>,</span><br><span class="line">      data () &#123;</span><br><span class="line">        <span class="keyword">return</span> &#123;</span><br><span class="line">          value: <span class="string">'我来自first.vue组件！'</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      methods:&#123;</span><br><span class="line">        add()&#123;<span class="comment">// 定义add方法，并将msg通过txt传给second组件</span></span><br><span class="line">          Bus.$emit(<span class="string">'txt'</span>,<span class="keyword">this</span>.value);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 4.在接收数据的地方通过</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// vueEvent.$on('名称',function(data) &#123;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// &#125;)</span></span><br><span class="line">    <span class="keyword">import</span> Bus <span class="keyword">from</span> <span class="string">'../bus.js'</span>;</span><br><span class="line">    <span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">      name: <span class="string">'second'</span>,</span><br><span class="line">      data () &#123;</span><br><span class="line">        <span class="keyword">return</span> &#123;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      mounted:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        Bus.$on(<span class="string">'txt'</span>,<span class="function"><span class="keyword">function</span>(<span class="params">val</span>)</span>&#123;<span class="comment">//监听first组件的txt事件</span></span><br><span class="line">          <span class="built_in">console</span>.log(val);</span><br><span class="line">        &#125;);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h2 id="父组件主动获取子组件数据"><a href="#父组件主动获取子组件数据" class="headerlink" title="父组件主动获取子组件数据"></a>父组件主动获取子组件数据</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//1.调用子组件的时候定义一个ref</span></span><br><span class="line"><span class="comment">//&lt;v-header ref="header"&gt;&lt;/v-header&gt;</span></span><br><span class="line">&lt;v-home :title=<span class="string">"title"</span> :home=<span class="string">"this"</span> ref=<span class="string">"home"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">v-home</span>&gt;</span></span></span><br><span class="line"><span class="comment">//2.在父组件this.$refs.header.属性/方法</span></span><br><span class="line"> getChildData() &#123;</span><br><span class="line">      <span class="built_in">console</span>.log(<span class="keyword">this</span>.$refs.home.msg);  <span class="comment">//子组件属性</span></span><br><span class="line">      <span class="keyword">this</span>.$refs.home.run(<span class="string">"newbg"</span>);  <span class="comment">//子组件方法</span></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h2 id="子组件主动获取父组件数据的方法"><a href="#子组件主动获取父组件数据的方法" class="headerlink" title="子组件主动获取父组件数据的方法"></a>子组件主动获取父组件数据的方法</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//this.$parent.数据/方法</span></span><br><span class="line">    getParent() &#123;</span><br><span class="line">      <span class="built_in">console</span>.log(<span class="keyword">this</span>.$parent.title + <span class="string">"------子组件主动获取父组件的数据"</span>);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>最大子列和问题</title>
      <link href="/%E6%9C%80%E5%A4%A7%E5%AD%90%E5%88%97%E5%92%8C%E9%97%AE%E9%A2%98/"/>
      <url>/%E6%9C%80%E5%A4%A7%E5%AD%90%E5%88%97%E5%92%8C%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<h1 id="最大子列和问题"><a href="#最大子列和问题" class="headerlink" title="最大子列和问题"></a>最大子列和问题</h1><h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><p>给定K个整数组成的序列{ N1, N2, …, NK }，“连续子列”被定义为{ Ni, Ni+1, …, Nj }，其中 1≤i≤j≤K。“最大子列和”则被定义为所有连续子列元素的和中最大者。例如给定序列{ -2, 11, -4, 13, -5, -2 }，其连续子列{ 11, -4, 13 }有最大的和20。现要求你编写程序，计算给定整数序列的最大子列和。</p><a id="more"></a><p>本题旨在测试各种不同的算法在各种数据情况下的表现。各组测试数据特点如下：</p><p>数据1：与样例等价，测试基本正确性；<br>数据2：102个随机整数；<br>数据3：103个随机整数；<br>数据4：104个随机整数；<br>数据5：105个随机整数；</p><p>输入格式:<br>输入第1行给出正整数K (≤100000)；第2行给出K个整数，其间以空格分隔。</p><p>输出格式:<br>在一行中输出最大子列和。如果序列中所有整数皆为负数，则输出0。</p><p>输入样例:<br>6<br>-2 11 -4 13 -5 -2<br>输出样例:<br>20</p><h2 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h2><p>最先想到的值暴力破解,但是需要三重循环,既要控制序列的首和尾,还要有一层循环进行累加,只能通过一部分测试样例</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">MaxSubseqSum1</span> <span class="params">( <span class="keyword">int</span> A[], <span class="keyword">int</span> N )</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> ThisSum, MaxSum = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> i, j, k;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> ( i = <span class="number">0</span>; i &lt; N; i++ ) &#123;    <span class="comment">//i是子列左端位置。</span></span><br><span class="line"><span class="keyword">for</span> ( j = i; j &lt; N; j++ ) &#123;    <span class="comment">//j是子列右端位置。</span></span><br><span class="line">ThisSum = <span class="number">0</span>;    <span class="comment">//    每轮都要把ThisSum归零，累加新一轮的子列和。</span></span><br><span class="line"><span class="keyword">for</span> ( k = i; k &lt; j; k++ )    <span class="comment">//将A[i]~A[j]累加，得到子列和。</span></span><br><span class="line">ThisSum += A[k];</span><br><span class="line"><span class="keyword">if</span> ( ThisSum &gt; MaxSum )    <span class="comment">//如果这轮的子列和比最大子列和还大，存入MaxSum.</span></span><br><span class="line">MaxSum = ThisSum;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> MaxSum;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>二重循环也可以实现暴力破解,一方面控制起始端,另一方不断向左累加,更新max的值</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">MaxSubseqSum2</span> <span class="params">( <span class="keyword">int</span> A[], <span class="keyword">int</span> N )</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> ThisSum, MaxSum = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> i, j;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> ( i = <span class="number">0</span>; i &lt; N; i++ ) &#123;    <span class="comment">//i是子列左端位置。</span></span><br><span class="line">ThisSum = <span class="number">0</span>;    <span class="comment">//A[i]~A[j]的子列和。</span></span><br><span class="line"><span class="keyword">for</span> ( j = i; j &lt; N; j++ ) &#123;    <span class="comment">//j是子列右端位置。</span></span><br><span class="line">ThisSum += A[j];    <span class="comment">//对于相同的i，不同的j，只要在j-1处再累加1项即可。</span></span><br><span class="line"><span class="keyword">if</span> ( ThisSum &gt; MaxSum )    <span class="comment">//更新MaxSum.</span></span><br><span class="line">MaxSum = ThisSum;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> MaxSum;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>最优的方法是在线处理,只用一层循环控制起始端不断向右累加,保证向右累加只会使结果变大,总而言之灰常巧妙!</p><h2 id="参考代码"><a href="#参考代码" class="headerlink" title="参考代码"></a>参考代码</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">100010</span>;</span><br><span class="line"><span class="keyword">int</span> num[N];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> max,k,now;</span><br><span class="line">max = now = <span class="number">0</span>; <span class="comment">// 当前求和和最大求和 </span></span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;k;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; k; i++) &#123;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;num[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; k; i++) &#123;</span><br><span class="line">now += num[i];</span><br><span class="line"><span class="keyword">if</span>(now &gt; max)</span><br><span class="line">max = now;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(now &lt; <span class="number">0</span>) </span><br><span class="line">now = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;max;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo中Markdown语法使用</title>
      <link href="/Hexo%E4%B8%ADMarkdown%E8%AF%AD%E6%B3%95%E4%BD%BF%E7%94%A8/"/>
      <url>/Hexo%E4%B8%ADMarkdown%E8%AF%AD%E6%B3%95%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h2 id="Hexo中Markdown语法-GFM-使用"><a href="#Hexo中Markdown语法-GFM-使用" class="headerlink" title="Hexo中Markdown语法(GFM)使用"></a>Hexo中Markdown语法(GFM)使用</h2><p>提起Markdown，是项目、是不可多得的助手。<br><a href="https://www.appinn.com/markdown/" target="_blank" rel="noopener">Markdown</a> 是一种轻量级的”标记语言”，优点在于<br>（1）可以更加专注文章内容而不是排版样式。<br>（2）轻松的导出 HTML 和本身的 .md 文件。<br>（3）纯文本内容，兼容所有的文本编辑器与字处理软件。<br>（4）可读，直观。适合所有人的写作语言。<br>查资料了解到，Hexo下使用的MarkDown为Github的 <a href="https://help.github.com/en/categories/writing-on-github" target="_blank" rel="noopener">GFM</a> ，风格很漂亮，简洁美观大方。但是GFM 的MarkDown语法和标准的MarkDown稍有不同，使用过程中需要注意一些，在下面的介绍中我会进行说明的请放心。</p><a id="more"></a><h1 id="1-Markdown语法"><a href="#1-Markdown语法" class="headerlink" title="1 Markdown语法"></a>1 Markdown语法</h1><h2 id="1-1-标题"><a href="#1-1-标题" class="headerlink" title="1.1 标题"></a>1.1 标题</h2><p>Markdown支持6种级别的标题，对应html标签 h1 ~ h6</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># h1   //一级标题 对应 &lt;h1&gt; &lt;/h1&gt;</span><br><span class="line">## h2   //二级标题 对应 &lt;h2&gt; &lt;/h2&gt;</span><br><span class="line">### h3  //三级标题 对应 &lt;h3&gt; &lt;/h3&gt;</span><br><span class="line">#### h4  //四级标题 对应 &lt;h4&gt; &lt;/h4&gt;</span><br><span class="line">##### h5  //五级标题 对应 &lt;h5&gt; &lt;/h5&gt;</span><br><span class="line">###### h6  //六级标题 对应 &lt;h6&gt; &lt;/h6&gt;</span><br></pre></td></tr></table></figure><h2 id="1-2-段落及区块引用"><a href="#1-2-段落及区块引用" class="headerlink" title="1.2 段落及区块引用"></a>1.2 段落及区块引用</h2><p>Markdown提供了一个特殊符号 &gt; 用于段首进行强调，被强调的文字部分将会高亮显示</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; 这段文字将会被高亮显示...</span><br></pre></td></tr></table></figure><p>以上标记显示效果如下：</p><p><a href="https://raw.githubusercontent.com/wugenqiang/picGo/master/pictures/20190331144721.png" target="_blank" rel="noopener"><img src="https://raw.githubusercontent.com/wugenqiang/picGo/master/pictures/20190331144721.png" alt="img"></a></p><h2 id="1-3-插入链接或图片"><a href="#1-3-插入链接或图片" class="headerlink" title="1.3 插入链接或图片"></a>1.3 插入链接或图片</h2><p>Markdown针对链接和图片的处理也比较简单，可以使用下面的语法进行标记</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[点击跳转至百度](https://www.baidu.com)</span><br><span class="line">![图片](https://raw.githubusercontent.com/wugenqiang/picGo/master/pictures/015.jpg)</span><br></pre></td></tr></table></figure><p>以上标记显示效果如下：</p><p><a href="https://www.baidu.com/" target="_blank" rel="noopener">点击跳转至百度</a><br><a href="https://raw.githubusercontent.com/wugenqiang/picGo/master/pictures/015.jpg" target="_blank" rel="noopener"><img src="https://raw.githubusercontent.com/wugenqiang/picGo/master/pictures/015.jpg" alt="图片"></a></p><p><a href="https://raw.githubusercontent.com/wugenqiang/picGo/master/pictures/015.jpg" target="_blank" rel="noopener">图片</a></p><p>注： 引用图片和链接的唯一区别就是在最前方添加一个感叹号。</p><h2 id="1-4-列表"><a href="#1-4-列表" class="headerlink" title="1.4 列表"></a>1.4 列表</h2><p>Markdown支持有序列表和无序列表两种形式：</p><ul><li>无序列表使用 * 或 + 或 - 标识</li><li>有序列表使用数字加 . 标识，例如：1.</li></ul><h2 id="1-5-分隔线"><a href="#1-5-分隔线" class="headerlink" title="1.5 分隔线"></a>1.5 分隔线</h2><p>有时候，为了排版漂亮，可能会加入分隔线。Markdown加入分隔线非常简单，使用下面任意一种形式都可以</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">***</span><br><span class="line">---</span><br></pre></td></tr></table></figure><p>以上标记显示效果如下：</p><hr><hr><h2 id="1-6-内容强调"><a href="#1-6-内容强调" class="headerlink" title="1.6 内容强调"></a>1.6 内容强调</h2><p>有时候，我们对某一部分文字进行强调，使用 * 或 _ 包裹即可。使用单一符号标记的效果是斜体，使用两个符号标记的效果是加粗</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">*这里是斜体*</span><br><span class="line">_这里是斜体_</span><br><span class="line"></span><br><span class="line">**这里是加粗**</span><br><span class="line">__这里是加粗__</span><br><span class="line"></span><br><span class="line">***这里是加粗并斜体***</span><br><span class="line">___这里是加粗并斜体___</span><br></pre></td></tr></table></figure><p>以上标记显示效果如下：</p><p><em>这里是斜体</em><br><em>这里是斜体</em></p><p><strong>这里是加粗</strong><br><strong>这里是加粗</strong></p><p><strong>这里是加粗并斜体</strong><br><strong>这里是加粗并斜体</strong></p><h2 id="1-7-删除线"><a href="#1-7-删除线" class="headerlink" title="1.7 删除线"></a>1.7 删除线</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">这样来 ~~删除一段文本~~</span><br></pre></td></tr></table></figure><p>以上标记显示效果如下：</p><p>这样来 删除一段文本</p><h2 id="1-8-高亮显示"><a href="#1-8-高亮显示" class="headerlink" title="1.8 高亮显示"></a>1.8 高亮显示</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">使用&lt;code&gt;\`&lt;/code&gt;来强调字符//想打出 ` (反引号)需要转义，加&lt;code&gt;&lt;/code&gt;标签强调</span><br><span class="line">比如`突出背景色`来显示强调效果</span><br></pre></td></tr></table></figure><p>以上标记显示效果如下：</p><p>使用<code>来强调字符</code><br><code>比如突出背景色</code> 来显示强调效果</p><h2 id="1-9-嵌套引用"><a href="#1-9-嵌套引用" class="headerlink" title="1.9 嵌套引用"></a>1.9 嵌套引用</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&gt; 动物</span><br><span class="line">&gt;&gt; 水生动物</span><br><span class="line">&gt;&gt; 陆生动物</span><br><span class="line">&gt;&gt;&gt; 猴子</span><br><span class="line">&gt;&gt;&gt; 人</span><br><span class="line">&gt;&gt;&gt;&gt; 程序猿</span><br><span class="line">&gt;&gt;&gt;&gt; 攻城狮</span><br><span class="line">&gt;&gt;产品狗 //这里需要注意，没有空行间隔，忽略降级引用标记</span><br><span class="line">射鸡虱   //这里需要注意，没有空行间隔，忽略降级引用标记</span><br><span class="line"></span><br><span class="line">&gt;&gt; 两栖类动物</span><br><span class="line">&gt;&gt;&gt; 大鳄鱼</span><br><span class="line">唐老鸭</span><br><span class="line"></span><br><span class="line">两个回车结束引用,不在引用范围内了！</span><br></pre></td></tr></table></figure><p>以上标记显示效果如下：</p><blockquote><p>动物</p><blockquote><p>水生动物<br>陆生动物</p><blockquote><p>猴子<br>人</p><blockquote><p>程序猿<br>攻城狮<br>产品狗 //这里需要注意，没有空行间隔，忽略降级引用标记<br>射鸡虱 //这里需要注意，没有空行间隔，忽略降级引用标记</p></blockquote></blockquote></blockquote></blockquote><blockquote><blockquote><p>两栖类动物</p><blockquote><p>大鳄鱼<br>唐老鸭</p></blockquote></blockquote></blockquote><p>两个回车结束引用,不在引用范围内了！</p><h2 id="1-10-修改图片"><a href="#1-10-修改图片" class="headerlink" title="1.10 修改图片"></a>1.10 修改图片</h2><h3 id="1-10-1-设置图片尺寸"><a href="#1-10-1-设置图片尺寸" class="headerlink" title="1.10.1 设置图片尺寸"></a>1.10.1 设置图片尺寸</h3><p>在 markdown 直接使用提供的语法引入图片是无法设置大小的，所以我们需要用到 html 的 img 标签。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;img width=&quot;  &quot; alt=&quot;描述&quot; src=&quot;url&quot;/&gt;</span><br></pre></td></tr></table></figure><p>例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;img width=&quot;267px&quot; alt=&quot;欢迎来访呀朋友&quot; src=&quot;https://raw.githubusercontent.com/wugenqiang/picGo/master/pictures/013.jpg&quot;/&gt;</span><br></pre></td></tr></table></figure><h3 id="1-10-2-设置图片居中"><a href="#1-10-2-设置图片居中" class="headerlink" title="1.10.2 设置图片居中"></a>1.10.2 设置图片居中</h3><p>在 markdown 设置图片居中是需要通过 div 来控制的。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;div align=center&gt;&lt;img width=&quot;267px&quot; alt=&quot;欢迎来访呀朋友&quot; src=&quot;https://raw.githubusercontent.com/wugenqiang/picGo/master/pictures/013.jpg&quot;/&gt;&lt;/div&gt;</span><br></pre></td></tr></table></figure><h2 id="1-11-插入代码块"><a href="#1-11-插入代码块" class="headerlink" title="1.11 插入代码块"></a>1.11 插入代码块</h2><p>Markdown在IT圈子里面比较流行的一个重要原因是，它能够轻松漂亮地插入代码。<br>方法是，使用三个反引号 ` 进行包裹即可。如果是行内代码引用，使用单个反引号进行包裹</p><p>代码块语法遵循标准 <code>markdown</code> 代码，使用 <figure class="highlight plain"><figcaption><span>``` 结束 例如：</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></p><p>​<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">print</span> <span class="string">'Hello World! </span></span><br><span class="line"><span class="string">​</span></span><br></pre></td></tr></table></figure></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">以上标记显示效果如下：</span><br></pre></td></tr></table></figure><p>#!/usr/bin/env python</p><p>print ‘Hello World!</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">注：很多人不知道怎么输入反引号。在英文模式下，找到键盘最左侧esc键下面的第一个键点击即可。</span><br><span class="line">有人会问：</span><br><span class="line">如何在代码块中打出</span><br></pre></td></tr></table></figure><p>实际上是使用 4个包含 3个 就可以了，想表示更多，最外层+1就好了。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">​```</span><br><span class="line">​```</span><br></pre></td></tr></table></figure><h2 id="1-12-插入表格"><a href="#1-12-插入表格" class="headerlink" title="1.12 插入表格"></a>1.12 插入表格</h2><p>表格是Markdown语法中比较复杂的一个，其语法如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">列1   | 列2 | 列3 </span><br><span class="line">----- | --- | ---- </span><br><span class="line">第1行 | 12  | 13  </span><br><span class="line">第2行 | 22  | 23  </span><br><span class="line">第3行 | 32  | 33</span><br></pre></td></tr></table></figure><p>以上标记显示效果如下：</p><table><thead><tr><th>列1</th><th>列2</th><th>列3</th></tr></thead><tbody><tr><td>第1行</td><td>12</td><td>13</td></tr><tr><td>第2行</td><td>22</td><td>23</td></tr><tr><td>第3行</td><td>32</td><td>33</td></tr></tbody></table><p>可以使用<code>冒号</code>来定义对齐方式：</p><p>全居中样式：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">表头|条目一|条目二</span><br><span class="line">:---:|:---:|:---:</span><br><span class="line">项目|项目一|项目二</span><br></pre></td></tr></table></figure><p>以上标记显示效果如下：</p><table><thead><tr><th>表头</th><th>条目一</th><th>条目二</th></tr></thead><tbody><tr><td>项目</td><td>项目一</td><td>项目二</td></tr></tbody></table><p>可能有人喜欢左对齐或者右对齐，也可以设置:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">| 左对齐    |  右对齐 | 居中 |</span><br><span class="line">| :-------- | -------:| :--: |</span><br><span class="line">| Computer  | 5000 元 |  1台 |</span><br><span class="line">| Phone     | 1999 元 |  1部 |</span><br></pre></td></tr></table></figure><p>以上标记显示效果如下：</p><table><thead><tr><th>左对齐</th><th>右对齐</th><th>居中</th></tr></thead><tbody><tr><td>Computer</td><td>5000 元</td><td>1台</td></tr><tr><td>Phone</td><td>1999 元</td><td>1部</td></tr></tbody></table><p>注：三个短竖杠左右的冒号用于控制对齐方式，只放置左边冒号表示文字居左，只放置右边冒号表示文字居右，如果两边都放置冒号表示文字居中。</p><h2 id="1-13-特殊符号处理"><a href="#1-13-特殊符号处理" class="headerlink" title="1.13 特殊符号处理"></a>1.13 特殊符号处理</h2><p>Markdown使用反斜杠\插入语法中用到的特殊符号。在Markdown中，主要有以下几种特殊符号需要处理：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">\   反斜线</span><br><span class="line">`   反引号</span><br><span class="line">*   星号</span><br><span class="line">_   底线</span><br><span class="line">&#123;&#125;  花括号</span><br><span class="line">[]  方括号</span><br><span class="line">()  括弧</span><br><span class="line">#   井字号</span><br><span class="line">+   加号</span><br><span class="line">-   减号</span><br><span class="line">.   英文句点</span><br><span class="line">!   惊叹号</span><br></pre></td></tr></table></figure><p>例如，如果你需要插入反斜杠，就连续输入两个反斜杠即可：\ \ =&gt; \ 。</p><p>注：在内容中输入以上特殊符号的时候一定要注意转义，否则将导致内容显示不全，甚至排版混乱。</p><p>重要：MarkDown表格中使用竖线，如何做？</p><p>表格中使用竖线    竖线数目<br>|    一个竖线: &amp; # 1 2 4 ;<br>||    两个竖线: &amp; # 1 2 4 ; &amp; # 1 2 4 ;</p><h2 id="1-14-文本居中引用"><a href="#1-14-文本居中引用" class="headerlink" title="1.14 文本居中引用"></a>1.14 文本居中引用</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;% cq %&#125;</span><br><span class="line">人生乃是一面镜子，</span><br><span class="line">从镜子里认识自己，</span><br><span class="line">我要称之为头等大事，</span><br><span class="line">也只是我们追求的目的！</span><br><span class="line">&#123;% endcq %&#125;</span><br></pre></td></tr></table></figure><p>以上标记显示效果如下：</p><blockquote><p>人生乃是一面镜子，<br>从镜子里认识自己，<br>我要称之为头等大事，<br>也只是我们追求的目的！</p></blockquote><p>注：如果想修改字号，可以如下面这样设置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;font size=&quot;4&quot;&gt;</span><br><span class="line">&#123;% cq %&#125;</span><br><span class="line">  人生乃是一面镜子，</span><br><span class="line">  从镜子里认识自己，</span><br><span class="line">  我要称之为头等大事，</span><br><span class="line">  也只是我们追求的目的！</span><br><span class="line">&#123;% endcq %&#125;</span><br><span class="line">&lt;/font&gt;</span><br></pre></td></tr></table></figure><p>以上标记显示效果如下：</p><blockquote><p>人生乃是一面镜子，<br>从镜子里认识自己，<br>我要称之为头等大事，<br>也只是我们追求的目的！</p></blockquote><h2 id="1-15-主题自带样式-note-标签"><a href="#1-15-主题自带样式-note-标签" class="headerlink" title="1.15 主题自带样式 note 标签"></a>1.15 主题自带样式 note 标签</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;note default&quot;&gt;&lt;p&gt;default&lt;/p&gt;&lt;/div&gt;</span><br></pre></td></tr></table></figure><p>以上标记显示效果如下：</p><p>default</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;note primary&quot;&gt;&lt;p&gt;primary&lt;/p&gt;&lt;/div&gt;</span><br></pre></td></tr></table></figure><p>以上标记显示效果如下：</p><p>primary</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;note success&quot;&gt;&lt;p&gt;success&lt;/p&gt;&lt;/div&gt;</span><br></pre></td></tr></table></figure><p>以上标记显示效果如下：</p><p>success</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;note warning&quot;&gt;&lt;p&gt;warning&lt;/p&gt;&lt;/div&gt;</span><br></pre></td></tr></table></figure><p>以上标记显示效果如下：</p><p>warning</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;note danger&quot;&gt;&lt;p&gt;danger&lt;/p&gt;&lt;/div&gt;</span><br></pre></td></tr></table></figure><p>以上标记显示效果如下：</p><p>danger</p><p>在<code>主题配置文件</code>中需要配置下:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># Note tag (bs-callout).</span><br><span class="line">note:</span><br><span class="line">  # 风格</span><br><span class="line">  style: flat</span><br><span class="line">  # 要不要图标</span><br><span class="line">  icons: true</span><br><span class="line">  # 圆角矩形</span><br><span class="line">  border_radius: 3</span><br><span class="line">  light_bg_offset: 0</span><br></pre></td></tr></table></figure><h2 id="1-16-文字处理"><a href="#1-16-文字处理" class="headerlink" title="1.16 文字处理"></a>1.16 文字处理</h2><h3 id="1-16-1-文字背景色"><a href="#1-16-1-文字背景色" class="headerlink" title="1.16.1 文字背景色"></a>1.16.1 文字背景色</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;table&gt;&lt;tr&gt;&lt;td bgcolor=#FFFF00&gt;背景色的设置是按照十六进制颜色值：#FFFF00&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</span><br><span class="line">&lt;table&gt;&lt;tr&gt;&lt;td bgcolor=#D1EEEE&gt;背景色的设置是按照十六进制颜色值：#D1EEEE&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</span><br><span class="line">&lt;table&gt;&lt;tr&gt;&lt;td bgcolor=#C0FF3E&gt;背景色的设置是按照十六进制颜色值：#C0FF3E&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</span><br><span class="line">&lt;table&gt;&lt;tr&gt;&lt;td bgcolor=#54FF9F&gt;背景色的设置是按照十六进制颜色值：#54FF9F&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</span><br></pre></td></tr></table></figure><p>效果如下：</p><p>背景色的设置是按照十六进制颜色值：#FFFF00</p><p>背景色的设置是按照十六进制颜色值：#D1EEEE</p><p>背景色的设置是按照十六进制颜色值：#C0FF3E</p><p>背景色的设置是按照十六进制颜色值：#54FF9F</p><h3 id="1-16-2-文字字体"><a href="#1-16-2-文字字体" class="headerlink" title="1.16.2 文字字体"></a>1.16.2 文字字体</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;font face=&quot;黑体&quot;&gt;我是黑体字&lt;/font&gt;</span><br><span class="line">&lt;font face=&quot;宋体&quot;&gt;我是宋体字&lt;/font&gt;</span><br><span class="line">&lt;font face=&quot;微软雅黑&quot;&gt;我是微软雅黑字&lt;/font&gt;</span><br></pre></td></tr></table></figure><p>效果如下：</p><p>我是黑体字<br>我是宋体字<br>我是微软雅黑字</p><h3 id="1-16-3-文字大小"><a href="#1-16-3-文字大小" class="headerlink" title="1.16.3 文字大小"></a>1.16.3 文字大小</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">size为1：&lt;font size=&quot;1&quot;&gt;size为1&lt;/font&gt;</span><br><span class="line">size为2：&lt;font size=&quot;2&quot;&gt;size为2&lt;/font&gt;</span><br><span class="line">size为3：&lt;font size=&quot;3&quot;&gt;size为3&lt;/font&gt;</span><br><span class="line">size为4：&lt;font size=&quot;4&quot;&gt;size为4&lt;/font&gt;</span><br><span class="line">size为10：&lt;font size=&quot;10&quot;&gt;size为10&lt;/font&gt;</span><br></pre></td></tr></table></figure><p>效果如下：</p><p>size为1：size为1<br>size为2：size为2<br>size为3：size为3<br>size为4：size为4<br>size为10：size为10</p><h3 id="1-16-4-文字颜色"><a href="#1-16-4-文字颜色" class="headerlink" title="1.16.4 文字颜色"></a>1.16.4 文字颜色</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">红色文字：&lt;font color=&quot;red&quot;&gt;红色文字&lt;/font&gt;</span><br><span class="line">浅红色文字：&lt;font color=&quot;#dd0000&quot;&gt;浅红色文字&lt;/font&gt; </span><br><span class="line">蓝色文字：&lt;font color=&quot;blue&quot;&gt;蓝色文字&lt;/font&gt;</span><br><span class="line">浅蓝色文字：&lt;font color=&quot;#0000dd&quot;&gt;浅蓝色文字&lt;/font&gt;</span><br><span class="line">绿色文字：&lt;font color=&quot;green&quot;&gt;绿色文字&lt;/font&gt;</span><br><span class="line">金黄色文字：&lt;font color=&quot;#FFFF00&quot;&gt;金黄色文字&lt;/font&gt;</span><br><span class="line">浅黄色文字：&lt;font color=&quot;#dddd00&quot;&gt;浅黄色文字&lt;/font&gt; </span><br><span class="line">深黄色文字：&lt;font color=&quot;#666600&quot;&gt;深黄色文字&lt;/font&gt;</span><br></pre></td></tr></table></figure><p>效果如下：</p><p>红色文字：红色文字<br>浅红色文字：浅红色文字<br>蓝色文字：蓝色文字<br>浅蓝色文字：浅蓝色文字<br>绿色文字：绿色文字<br>金黄色文字：金黄色文字<br>浅黄色文字：浅黄色文字<br>深黄色文字：深黄色文字</p><p>需要其它更多的颜色，可以到下面这个网址查更多颜色的 RGB，或者直接用颜色的英文代替 RGB<br><a href="http://www.114la.com/other/rgb.htm" target="_blank" rel="noopener">RGB颜色查询对照表</a></p><h3 id="1-16-4-同时改变字体，字号和颜色"><a href="#1-16-4-同时改变字体，字号和颜色" class="headerlink" title="1.16.4 同时改变字体，字号和颜色"></a>1.16.4 同时改变字体，字号和颜色</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;font face=&quot;字体&quot; size=&quot;字号&quot; color=&quot;颜色&quot;&gt;这里是需要突出显示的内容&lt;/font&gt;</span><br><span class="line">&lt;font face=&quot;黑体&quot;&gt;我是黑体字&lt;/font&gt;</span><br><span class="line">&lt;font face=&quot;微软雅黑&quot;&gt;我是微软雅黑&lt;/font&gt;</span><br><span class="line">&lt;font face=&quot;STCAIYUN&quot;&gt;我是华文彩云&lt;/font&gt;</span><br><span class="line">&lt;font color=red&gt;我是红色&lt;/font&gt;</span><br><span class="line">&lt;font color=#008000&gt;我是绿色&lt;/font&gt;</span><br><span class="line">&lt;font color=Blue&gt;我是蓝色&lt;/font&gt;</span><br><span class="line">&lt;font size=5&gt;我是尺寸&lt;/font&gt;</span><br><span class="line">&lt;font face=&quot;黑体&quot; color=green size=5&gt;我是黑体，绿色，尺寸为5&lt;/font&gt;</span><br></pre></td></tr></table></figure><p>效果如下：</p><p>这里是需要突出显示的内容<br>我是黑体字<br>我是微软雅黑<br>我是华文彩云<br>我是红色<br>我是绿色<br>我是蓝色<br>我是尺寸<br>我是黑体，绿色，尺寸为5</p><h2 id="1-17-使用Emoji表情"><a href="#1-17-使用Emoji表情" class="headerlink" title="1.17 使用Emoji表情"></a>1.17 使用Emoji表情</h2><p>使用前首先要开启 <code>emoji</code>，默认是不显示的，参考：<a href="https://blog.enjoytoshare.club/article/hexo-do-optimization.html#3-27-%E5%BC%80%E5%90%AFemoji%E8%A1%A8%E6%83%85" target="_blank" rel="noopener">开启emoji表情</a><br>开启 <code>emoji</code> 后进行操作</p><p>举例：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Hello Hexo NexT :smile:</span><br></pre></td></tr></table></figure><p>效果：</p><p>Hello Hexo NexT 😄</p><p>更多可用 Emoji 代码参见 <a href="https://www.webfx.com/tools/emoji-cheat-sheet/" target="_blank" rel="noopener">emoji-cheat-sheet</a> 和 <a href="https://www.emojicopy.com/" target="_blank" rel="noopener">emojicopy</a></p><h2 id="1-18-复选框列表-github可用-hexo不支持"><a href="#1-18-复选框列表-github可用-hexo不支持" class="headerlink" title="1.18 复选框列表(github可用,hexo不支持)"></a>1.18 复选框列表(github可用,hexo不支持)</h2><p>在列表符号后面加上 <code>[x]</code> 或者 <code>[ ]</code> 代表<code>选中</code>或者<code>未选中</code>情况</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">- [ ] content </span><br><span class="line">-空格[空格]空格content </span><br><span class="line">解释: [ ]括号里面的空格可以换成[x],代表选中对话框</span><br></pre></td></tr></table></figure><ul><li><input checked disabled type="checkbox"> C</li><li><input checked disabled type="checkbox"> C++</li><li><input checked disabled type="checkbox"> Java</li><li><input checked disabled type="checkbox"> Qt</li><li><input checked disabled type="checkbox"> Android</li><li><input disabled type="checkbox"> C#</li><li><input disabled type="checkbox"> .NET</li></ul><h2 id="1-19-脚注"><a href="#1-19-脚注" class="headerlink" title="1.19 脚注"></a>1.19 脚注</h2><p>使用 <code>[^1]</code> <code>[^1]:</code>的脚注对来表示</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Here is a footnote reference,[^1] and another.[^longnote]</span><br><span class="line"></span><br><span class="line">[^1]: Here is the footnote.</span><br><span class="line"></span><br><span class="line">[^longnote]: Here&apos;s one with multiple blocks.</span><br><span class="line">    Subsequent paragraphs are indented to show that they</span><br><span class="line">    belong to the previous footnote.</span><br></pre></td></tr></table></figure><p>效果如下：</p><p>Here is a footnote reference,<a href="https://blog.enjoytoshare.club/article/hexo-do-optimization-markdown.html#fn1" target="_blank" rel="noopener">[1]</a> and another.<a href="https://blog.enjoytoshare.club/article/hexo-do-optimization-markdown.html#fn2" target="_blank" rel="noopener">[2]</a></p><h1 id="2-文章编辑"><a href="#2-文章编辑" class="headerlink" title="2 文章编辑"></a>2 文章编辑</h1><h2 id="2-1-文章配置"><a href="#2-1-文章配置" class="headerlink" title="2.1 文章配置"></a>2.1 文章配置</h2><p>在<code>hexo</code>文件夹下右键点击<code>Git Bash here</code>后键入<code>$hexo new page &quot;name&quot;</code>，<code>source/_post</code> 文件夹中就会生成<code>name.md</code>文件，打开后即可编辑，编辑格式如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 文章名</span><br><span class="line">date: 2019-04-09 12:27:52     //发表日期</span><br><span class="line">updated: 2019-04-09 13:27:52  //更新日期</span><br><span class="line">categories: Markdown          //文章分类</span><br><span class="line">tags: [tag1,tag2]             //文章标签，多标签时使用英文逗号隔开</span><br><span class="line">photos:                       //如果使用Fancybox（文章头部展示图片），如此设置  </span><br><span class="line">                              //注意冒号后面有空格</span><br><span class="line">---</span><br></pre></td></tr></table></figure><h2 id="2-2-文章折叠"><a href="#2-2-文章折叠" class="headerlink" title="2.2 文章折叠"></a>2.2 文章折叠</h2><p>在要显示的文字末尾添加如下代码实现文章在主页的折叠显示。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- more --&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 转载 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/hello-world/"/>
      <url>/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><a id="more"></a><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
      <categories>
          
          <category> 杂七杂八 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
